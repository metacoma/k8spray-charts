replicas: 4
port: 9000
accessKey: "miniokey"
secretKey: "miniosecret"

image:
  repository: minio/
  name: minio
  tag: "RELEASE.2017-07-24T18-27-35Z"
  pullPolicy: IfNotPresent

persistence:
  type: emptyDir # or hostPath or PersistentVolumeClaim

  #storageClass: ""
  volumeSize: 10Gi

  hostPath: ""

service:
  type: NodePort # or ClusterIP or LoadBalancer

  nodePort: ""

  loadBalancerIP: ""
  loadBalancerSourceRanges: []

  annotations: {}

resources:
#  requests:
#    memory: 256Mi
#    cpu: 250m
#  limits:
#    memory: 256Mi
#    cpu: 250m

## Below settings can be used to setup event notifications as explained here.
## https://docs.minio.io/docs/minio-bucket-notification-guide
##
minioConfig:
  aqmp:
    enable: false
    url: ""
    exchange: ""
    routingKey: ""
    exchangeType: ""
    deliveryMode: 0
    mandatory: false
    immediate: false
    durable: false
    internal: false
    noWait: false
    autoDeleted: false
  nats:
    enable: false
    address: ""
    subject: ""
    username: ""
    password: ""
    token: ""
    secure: false
    pingInterval: 0
    enableStreaming: false
    clusterID: ""
    clientID: ""
    async: false
    maxPubAcksInflight: 0
  elasticsearch:
    enable: false
    format: "namespace"
    url: ""
    index: ""
  redis:
    enable: false
    format: "namespace"
    address: ""
    password: ""
    key: ""
  postgresql:
    enable: false
    format: "namespace"
    connectionString: ""
    table: ""
    host: ""
    port: ""
    user: ""
    password: ""
    database: ""
  kafka:
    enable: false
    brokers: "null"
    topic: ""
  webhook:
    enable: false
    endpoint: ""
  mysql:
    enable: false
    format: "namespace"
    dsnString: ""
    table: ""
    host: ""
    port: ""
    user: ""
    password: ""
    database: ""
