apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "jenkins.master-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Master.Component }}"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{ .Release.Name }}-{{ .Values.Master.Component }}"
  template:
    metadata:
      labels:
        app: {{ template "jenkins.master-fullname" . }}
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        component: "{{ .Release.Name }}-{{ .Values.Master.Component }}"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/jenkins/config.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: copy-default-config
        image: '{{ .Values.Master.image.repository }}{{ .Values.Master.image.name }}:{{ .Values.Master.image.tag }}'
        imagePullPolicy: '{{ .Values.Master.image.pullPolicy }}'
        command:
        - sh
        - /var/jenkins_config/apply_config.sh
        volumeMounts:
        - mountPath: /var/jenkins_config
          name: jenkins-config
        - mountPath: /var/jenkins_home
          name: jenkins-home
        - mountPath: /usr/share/jenkins/ref/plugins/
          name: plugin-dir
        - mountPath: /usr/share/jenkins/ref/secrets/
          name: secrets-dir
      {{- if .Values.Master.NodeSelector }}
      nodeSelector:
{{ toYaml .Values.Master.NodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.Master.Tolerations }}
      tolerations:
{{ toYaml .Values.Master.Tolerations | indent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 0
      containers:
        - name: {{ template "jenkins.master-fullname" . }}
          image: "{{ .Values.Master.image.repository }}{{ .Values.Master.image.name }}:{{ .Values.Master.image.tag }}"
          imagePullPolicy: "{{ .Values.Master.image.pullPolicy }}"
          {{- if .Values.Master.UseSecurity }}
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=admin"]
          {{- end }}
          env:
            - name: JAVA_OPTS
              value: "{{ default "" .Values.Master.JavaOpts }}"
            {{- if .Values.Master.UseSecurity }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "jenkins.master-fullname" . }}
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "jenkins.master-fullname" . }}
                  key: jenkins-admin-user
            {{- end }}
          ports:
            - containerPort: {{ .Values.Master.port }}
              name: http
            - containerPort: {{ .Values.Agent.port }}
              name: slavelistener
            {{- if .Values.Master.JMXPort }}
            - containerPort: {{ .Values.Master.JMXPort }}
              name: jmx
            {{- end }}
          resources:
{{ toYaml .Values.Master.resources | indent 12 }}
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            -
              mountPath: /usr/share/jenkins/ref/plugins/
              name: plugin-dir
              readOnly: false
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false
      volumes:
      - name: jenkins-config
        configMap:
          name: {{ template "jenkins.master-fullname" . }}
      - name: plugin-dir
        emptyDir: {}
      - name: secrets-dir
        emptyDir: {}
      - name: jenkins-home
        {{- if eq .Values.Master.persistence.type "emptyDir" }}
        emptyDir: {}
        {{- else if eq .Values.Master.persistence.type "hostPath" }}
        hostPath:
          path: "{{ .Values.Master.persistence.hostPath }}"
        {{- else if eq .Values.Master.persistence.type "PersistentVolumeClaim" }}
        persistentVolumeClaim:
          claimName: {{ template "jenkins.master-fullname" . }}
        {{- end }}
